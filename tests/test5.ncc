/* node user-defined type that is a record*/
type node is 
  record 
    var val: integer
    var left: node
    var right: node
    var is_null: boolean is false
  end


/* Routine to find the node with given value in bst */
routine find(cur: node, x: integer): node is
  if cur.is_null then
    var new_node: node
    return new_node
  end
  if cur.val < x then
    return find(cur.right, x)
  else
    if cur.val > x then
      return find(cur.left, x)
    end
    return cur
  end
end

var null: node

routine main() is
  null.is_null := true
  var first: node
  var second: node
  var third: node
  var fourth: node
  first.val := 3
  first.left := second
  first.right := third
  second.val := 2
  second.left := fourth
  second.right := null
  fourth.val := 1
  fourth.left := null
  fourth.right := null
  third.val := 4
  third.left := null
  third.right := null
  assert find(first, 1).val, 1 // OK
end